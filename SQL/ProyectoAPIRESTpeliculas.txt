PROYECTO: API REST IMDB SQL

El objetivo de este proyecto es implementar una API REST totalmente funcional de IMDB utilizando SQL.

1.	Diseño de BBDD SQL 
Tomando como referencia las clases del proyecto IMDB diseñar una BBDD en SQL con todas sus entidades, relaciones y atributos. Incluyendo las siguientes modificaciones:
•	Cada película podrá tener más de un actor.
•	Cada película podrá tener más de un guionista.
•	Cada película podrá tener más de un director.
•	Existirá una nueva entidad que se denomina Productoras que tendrá como campos:
o	Nombre de la productora
o	Año de la creación
o	País de origen
2.	Implementación de BBDD SQL.
Implementar utilizando phpMyAdmin la base de datos diseñada en el apartado anterior.
3.	API REST de profesionales.
Desarrollar un API REST con los siguientes endpoints:
•	GET /profesionales?id=5 o /profesionales:id. Obtiene los datos del profesional con el id pasado por parámetro.
•	GET /profesionales. Obtiene toda la lista de profesionales.
•	POST /profesionales. Añade un nuevo profesional en la lista de profesionales.
•	PUT /profesionales. Modifica los datos de un profesional
•	DEL /profesionales. Elimina a un profesional de la lista.	
4.	API REST de productoras.
Desarrollar un API REST con los siguientes endpoints:
•	GET /productoras?id=5 o /productoras:id. Obtiene los datos de la
productora con el id pasado por parámetro.
•	GET /productoras. Obtiene todas las productoras.
•	POST /productoras. Añade una nueva productora.
•	PUT /productoras. Modifica los datos de un productoras
•	DEL /productoras. Elimina una productora.	

 

5.	API REST de una película 
Desarrolla una API REST para el recurso Pelicula con los siguientes endpoints:
•	GET /peliculas. Devuelve todas las películas almacenadas
•	GET /películas?id o /películas:id. Obtiene los datos de una película
•	GET /pelicula/actor?idPelicula=1 o /pelicula/actor:idPelicula. Devuelve los datos relativos a los actores de la película con ese id.
•	GET /pelicula/director?idPelicula=1& o /pelicula/director:idPelicula. Devuelve los datos relativos a los directores de la pelicula.
•	GET /pelicula/guionista?idPelicula=1 o /pelicula/guionista:idPelicula. Devuelve los datos relativos a los guionistas de la pelicula.
•	GET /pelicula/productora?idPelicula=1 o /pelicula/productora:idPelicula. Devuelve los datos relativos a la productora de la pelicula.
•	POST /peliculas. Crea una nueva película
•	POST /pelicula/actor. Añade un nuevo actor a la lista de actores de la película.
•	POST /pelicula/director. Añade un director a la película
•	POST /pelicula/guionista. Añade un guionista a la película
•	PUT /peliculas. Actualiza los datos de una película.
•	DEL /películas. Elimina una película
•	DEL /pelicula/actor. Eliminar un actor de la pelicula.
•	DEL /pelicula/director. Elimina un director de la pelicula
•	DEL /pelicula/guionista. Elimina un guionista de la pelicula

